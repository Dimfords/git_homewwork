""" Задание 1
Напишите функцию, вычисляющую произведение
элементов списка целых. Список передаётся в качестве параметра. 
Полученный результат возвращается из функции. """


# def my_multiply(l):
#     c=1
#     for item in l:
#         c *= item
#     return c
# l = [1,1,3,4,5]


# print(my_multiply(l))


"""Задание 2
Напишите функцию для нахождения минимума в
списке целых. Список передаётся в качестве параметра.
Полученный результат возвращается из функции.
"""

# def my_min(l):
#     min = l[0]
#     for i in l:
#         if i <= min:
#             min = i
#     return min

# l = [-3,0,-6,-1,0,4]        

# print(my_min(l))

""" Задание 3
Напишите функцию, определяющую количество простых чисел в списке целых. 
Список передаётся в качестве параметра.
Полученный результат возвращается из функции. """

# def my_primes(l):
#     t = []
#     for i in l:
#         for j in range(2,i):
#             if i % j == 0:
#                 break
#         else:
#             if i != 1:  #удалить 1
#                 t.append(i)
#     return t

# l = [1,2,3,4,5,6,7,1,11,10,12,13,100,101,103,107,110,121,113]

# print(my_primes(l))

""" Задание 4
Напишите функцию, удаляющую из списка целых
некоторое заданное число. Из функции нужно вернуть
количество удаленных элементов. """

# def del_my_num(l,del_num):
#     del_i = 0
#     while del_num in l: #смещается диапазон переделать 
#             del_i += 1
#             l.remove(del_num)
#     return del_i

# l = [11,11,3,4,5,6,7,11,10,12,13,11,101,11,11,11]

# print(del_my_num(l,11))
            

""" Задание 5
Напишите функцию, которая получает два списка в
качестве параметра и возвращает список, содержащий
элементы обоих списков. """

# def glue_list(l1, l2):
#     glue = [x for x in l1] + [x for x in l2]
#     return glue
    

# l1 = [11,3,4,5,6,7]
# l2 = [2,30,40,5,6]

# print(glue_list(l1, l2))


""" Задание 6
Напишите функцию, высчитывающую степень каждого
элемента списка целых. Значение для степени передаётся
в качестве параметра, список тоже передаётся в качестве
параметра. Функция возвращает новый список, содержащий полученные результаты. """


# def my_exponent(l,ex):
#     exponented = []
#     for i in l:
#         e = i**ex
#         exponented.append(e)
#     return exponented

# l = [1,2,3,4,5,6,7,8]

# print(my_exponent(l,2))

# написать функцию вычисляющую количество цифр с помощью рекурсии
# def digit_counter(a):
#     if abs(a) // 10 != 0:
#         return digit_counter(abs(a) // 10) + 1
#     return 1

# print(digit_counter(-355555))

# написать функцию которая переворачивает число в обратном порядке через пробелы

# def print_digit(a):
#     print(abs(a) // 10,end=" ")
#     print_digit(abs(a) // 10)

# print_digit(123)

